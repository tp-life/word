# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
#            upx --best helloword -o _upx_word
#            mv -f _upx_word helloword
version: 2
jobs:
  build:
    docker:
      # specify the version
      - image: golang:1.14.4-alpine3.12

    working_directory: ~/app
    branches:
      only:
        - master
    steps:
      - checkout
      # specify any bash command here prefixed with `run: `
      - run:
          name: sub image size
          command: |
            apk add --no-cache upx ca-certificates tzdata
      - run:
          name: build
          command: |
            echo "build yutang service start >>>"
            rm -rf go.sum
            go get -u golang.org/x/lint/golint
            echo "start lint >>>"
            golint ./...
            echo "lint completed >>>"
            go get -u github.com/swaggo/swag/cmd/swag
            go mod tidy
            swag init --generalInfo=cmd/api/service.go --output=api/swagger-spec/api
            echo "build mode: release, bin name: helloword"
            CGO_ENABLED=0 go build -o helloword -ldflags "-X 'word/pkg/app.GinMode=release' -s -w" -tags doc cmd/main.go
            echo ">>> build yutang service complete"
      - run:
          name: set TimeDone
          command: |
            apk add -U tzdata
            cp /usr/share/zoneinfo/Asia/Shanghai ./Shanghai
            cp /etc/ssl/certs/ca-certificates.crt ./ca-certificates.crt

      - setup_remote_docker
      - run:
          name: Install docker
          command: |
            apk add docker-cli
      - run:
          name: Login to Dockerhub
          command: |
            TAG="0.2.${CIRCLE_BUILD_NUM}"
            docker build -t tp651976605/word:$TAG .
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push tp651976605/word:$TAG
